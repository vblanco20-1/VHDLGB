- microjump test program. Should keep looping to 0, 
- and never overwrite the A register
-- 00 called when resetting
noop
noop
jmp :init
-- 01 called per frame
noop
noop
jmp :vsync
noop

-- constants
#byte lH = 0x11
#byte lE = 0x0E
#byte lL = 0x15 
#byte lO = 0x18 
#byte lW = 0x20
#byte lR = 0x1B 
#byte lD = 0x0D
--draw 255 times before going to next line
#byte drawcount = 0xFF

--variables
#byte Mp_MSB = 0x98
#byte Mp_LSB = 0x00

:vsync
noop

-- load drawcount into c
ld c $drawcount 

--hello world implementation

:drawloop
--load map adress into HL
ld H $Mp_MSB
ld L $Mp_LSB

-- fully clear everything

ld a #0x1
ld e #0x7D
:clearloop_outer

ld L #0xFF
:clearloop_inner
ld (hl) e
dec L
jmp nz :clearloop_inner
inc H
dec a
jmp nz :clearloop_outer


--reset HL
ld H $Mp_MSB
ld L $Mp_LSB

-- increment l by d
ld a l
add a d
ld l a

--print hello world into the tilemap one letter at a time
ld (hl) $lH
inc L
ld (hl) $lE 
inc L
ld (hl) $lL 
inc L
ld (hl) $lL
inc L
ld (hl) $lO 
inc L
ld (hl) #0x25
inc L
ld (hl) $lW 
inc L
ld (hl) $lO 
inc L
ld (hl) $lR 
inc L
ld (hl) $lL 
inc L
ld (hl) $lD 
inc L

-$byte halt = 0x76

-- decrement y location of world
ld e #0x20
ld a d 
add a e
ld d a

jmp :vsync

:init
noop
ld a #0xCC
ld d #0x00
noop
jmp :vsync
noop
$byte halt = 0x76